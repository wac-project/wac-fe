/* tslint:disable */
/* eslint-disable */
/**
 * Hospital Management API
 * API for managing hospital ambulances, procedures, and payments.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xkokavecs@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     * Unique identifier of the payment record.
     * @type {string}
     * @memberof Payment
     */
    id: string;
    /**
     * Identifier of the related procedure.
     * @type {string}
     * @memberof Payment
     */
    procedureId: string;
    /**
     * Insurance or payer for the procedure.
     * @type {string}
     * @memberof Payment
     */
    insurance: string;
    /**
     * Payment amount.
     * @type {number}
     * @memberof Payment
     */
    amount: number;
}

/**
 * Check if a given object implements the Payment interface.
 */
export function instanceOfPayment(value: object): value is Payment {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('procedureId' in value) || value['procedureId'] === undefined) return false;
    if (!('insurance' in value) || value['insurance'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function PaymentFromJSON(json: any): Payment {
    return PaymentFromJSONTyped(json, false);
}

// @ts-ignore
export function PaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Payment {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'procedureId': json['procedureId'],
        'insurance': json['insurance'],
        'amount': json['amount'],
    };
}

export function PaymentToJSON(json: any): Payment {
    return PaymentToJSONTyped(json, false);
}

// @ts-ignore
export function PaymentToJSONTyped(value?: Payment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'procedureId': value['procedureId'],
        'insurance': value['insurance'],
        'amount': value['amount'],
    };
}

