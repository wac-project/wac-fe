/* tslint:disable */
/* eslint-disable */
/**
 * Hospital Management API
 * API for managing hospital ambulances, procedures, and payments.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xkokavecs@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// @ts-ignore
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Ambulance
 */
export interface Ambulance {
    /**
     * Unique identifier of the ambulance.
     * @type {string}
     * @memberof Ambulance
     */
    id: string;
    /**
     * Name of the ambulance.
     * @type {string}
     * @memberof Ambulance
     */
    name: string;
    /**
     * Location or base of the ambulance.
     * @type {string}
     * @memberof Ambulance
     */
    location: string;
    /**
     * Name of the driver in charge.
     * @type {string}
     * @memberof Ambulance
     */
    driverName: string;
}

/**
 * Check if a given object implements the Ambulance interface.
 */
export function instanceOfAmbulance(value: object): value is Ambulance {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('driverName' in value) || value['driverName'] === undefined) return false;
    return true;
}

export function AmbulanceFromJSON(json: any): Ambulance {
    return AmbulanceFromJSONTyped(json, false);
}

// @ts-ignore
export function AmbulanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ambulance {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'name': json['name'],
        'location': json['location'],
        'driverName': json['driverName'],
    };
}

export function AmbulanceToJSON(json: any): Ambulance {
    return AmbulanceToJSONTyped(json, false);
}

// @ts-ignore
export function AmbulanceToJSONTyped(value?: Ambulance | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'name': value['name'],
        'location': value['location'],
        'driverName': value['driverName'],
    };
}

